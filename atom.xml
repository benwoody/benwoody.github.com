<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Ben Woodall]]></title>
  <link href="http://benwoody.github.com/atom.xml" rel="self"/>
  <link href="http://benwoody.github.com/"/>
  <updated>2015-03-20T08:20:54-07:00</updated>
  <id>http://benwoody.github.com/</id>
  <author>
    <name><![CDATA[Ben Woodall]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Validating REST queries with Rails]]></title>
    <link href="http://benwoody.github.com/blog/2013/10/20/validating-rest-queries-with-rails/"/>
    <updated>2013-10-20T14:34:00-07:00</updated>
    <id>http://benwoody.github.com/blog/2013/10/20/validating-rest-queries-with-rails</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently been working on a few RESTful API&rsquo;s using Rails.  One of the
problems that I keep seeing with end users is that they usually don&rsquo;t read
the documentation very well and make simple mistakes when making specific
requests and queries.  This is easily solved with error handling and
validation of the API.  There are a few gems out there that will handle this
sort of situation for you, but there&rsquo;s already so much in Rails to help you
get this done out of the box.</p>

<!-- more -->


<p>First off, I like keeping my query validations separate by putting them into
app/controllers/validates and then including them at startup.  Each controller
should then have their own validator.</p>

<p>Validating specific queries can be done with ActionController::Parameters.
By creating an ActionController::Parameters object and
passing in the request params, we can then #permit specific queries to be made.</p>

<p>For example, let&rsquo;s say you&rsquo;re building a location aware app that needs to query
via latitude and longitude.  You can build an ActionController::Parameters
object to permit only the ?latitude and ?longitude queries:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Validate</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Location</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:latitude</span><span class="p">,</span> <span class="ss">:longitude</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">params</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>      <span class="vi">@latitude</span>  <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:latitude</span><span class="o">]</span>
</span><span class='line'>      <span class="vi">@longitude</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:longitude</span><span class="o">]</span>
</span><span class='line'>      <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Parameters</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:latitude</span><span class="p">,</span><span class="ss">:longitude</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>If a query other than ?latitude=X&amp;longitude=Y are passed, a
ActionController::UnpermittedParameters exception is returned.  We&rsquo;ll need to
rescue_from this exception in order to return our error to the user.  Our
Locations Controller would look something like:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">LocationsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Parameters</span><span class="o">.</span><span class="n">action_on_unpermitted_parameters</span> <span class="o">=</span> <span class="ss">:raise</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rescue_from</span><span class="p">(</span><span class="ss">ActionController</span><span class="p">:</span><span class="ss">:UnpermittedParameters</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">pme</span><span class="o">|</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="p">{</span> <span class="ss">error</span><span class="p">:</span>  <span class="p">{</span> <span class="n">unknown_parameters</span><span class="p">:</span> <span class="n">pme</span><span class="o">.</span><span class="n">params</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'>                   <span class="ss">status</span><span class="p">:</span> <span class="ss">:bad_request</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ActionController::Parameters.action_on_unpermitted_parameters is set to :raise
so that errors are thrown instead of logged.</p>

<p>Now, a query such as /locations?latitude=47.60&amp;longitude=-122.33 would return
a valid location for us, but a query containing anything else would return an
error.  For example:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>GET /locations?query<span class="o">=</span>bad
</span><span class='line'>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;error&quot;</span>:<span class="o">{</span><span class="s2">&quot;unknown_parameters&quot;</span>:<span class="o">[</span><span class="s2">&quot;query&quot;</span><span class="o">]}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So that&rsquo;s pretty awesome. Now end users of the API will know they can only use
specific queries.  But which queries?  It&rsquo;d be nice if there was a way to let
an end user know which queries were needed.  If only Rails had a way to
validate certain values&hellip;</p>

<p>Enter ActiveModel::Validations.  The same validations we use on our
ActiveRecord Models can be used to validate queries we make to the API.</p>

<p>To do this, we need to include ActiveRecord::Validations in our API validations.
Then, you can validate queries just like you validate models.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Validate</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Activity</span>
</span><span class='line'>    <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Validations</span>
</span><span class='line'>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:latitude</span><span class="p">,</span> <span class="ss">:longitude</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">validates</span> <span class="ss">:latitude</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">numericality</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">validates</span> <span class="ss">:longitude</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">numericality</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">params</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>      <span class="vi">@latitude</span>  <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:latitude</span><span class="o">]</span>
</span><span class='line'>      <span class="vi">@longitude</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:longitude</span><span class="o">]</span>
</span><span class='line'>      <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Parameters</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:latitude</span><span class="p">,</span><span class="ss">:longitude</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Not only can we validate the presence of a certain query, we can validate that
it must be in a certain format, contain certain items, etc&hellip; Anything you can
validate with ActiveModel::Validations you can now validate in your API.</p>

<p>A few changes need to be made in our Locations Controller in order to make this
work:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">LocationsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:validate_params</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rescue_from</span><span class="p">(</span><span class="ss">ActionController</span><span class="p">:</span><span class="ss">:UnpermittedParameters</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">pme</span><span class="o">|</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="p">{</span> <span class="ss">error</span><span class="p">:</span>  <span class="p">{</span> <span class="n">unknown_parameters</span><span class="p">:</span> <span class="n">pme</span><span class="o">.</span><span class="n">params</span> <span class="p">}</span> <span class="p">},</span>
</span><span class='line'>                   <span class="ss">status</span><span class="p">:</span> <span class="ss">:bad_request</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">validate_params</span>
</span><span class='line'>    <span class="n">location</span> <span class="o">=</span> <span class="ss">Validate</span><span class="p">:</span><span class="ss">:Location</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">!</span><span class="n">location</span><span class="o">.</span><span class="n">valid?</span>
</span><span class='line'>      <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="p">{</span> <span class="ss">error</span><span class="p">:</span> <span class="n">location</span><span class="o">.</span><span class="n">errors</span> <span class="p">}</span> <span class="ow">and</span> <span class="k">return</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we get the following errors:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>GET /locations?latitude<span class="o">=</span>near&amp;longitude<span class="o">=</span>far
</span><span class='line'>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;error&quot;</span>:<span class="o">{</span><span class="s2">&quot;latitude&quot;</span>:<span class="o">[</span><span class="s2">&quot;is not a number&quot;</span><span class="o">]</span>,<span class="s2">&quot;longitude&quot;</span>:<span class="o">[</span><span class="s2">&quot;is not a number&quot;</span><span class="o">]}}</span>
</span></code></pre></td></tr></table></div></figure>


<p>There&rsquo;s so much more that you can do with this.  I&rsquo;ve built a demo app and put
it on Github to show off the usage described in this post.  Check it out @
<a href="https://github.com/benwoody/validate_params">https://github.com/benwoody/validate_params</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Go Learn]]></title>
    <link href="http://benwoody.github.com/blog/2013/06/18/go-learn/"/>
    <updated>2013-06-18T20:01:00-07:00</updated>
    <id>http://benwoody.github.com/blog/2013/06/18/go-learn</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://i.imgur.com/TZ3vvrP.png"></p>

<p>I&rsquo;ve recently decided to pick up learning the Go programming language.  Why Go?  I don&rsquo;t remember why.  But I think I was interested in beefing up backend services for some of the webapps I deploy.  Plus, the Gopher is kinda cool.  Also, the language itself is very easy to read in a Ruby type way.</p>

<p>The one pain in the ass thing about Go is that, as of now, the resources for learning it are few and far between.  So I figured, &ldquo;Hey, why don&rsquo;t I just write about the things I&rsquo;m learning?&rdquo;  So, hey, I&rsquo;m doing that.</p>

<!-- more -->


<p>I&rsquo;ve started a repository on github, <a href="https://github.com/benwoody/go_learn">benwoody/go_learn</a>.  There, I plan on adding the code example I will be writing about in this very blog!</p>

<p>So as a first post on my Go learning journey, I present to you a list of Go learning resources!</p>

<ul>
<li>go_learn resources: <a href="https://github.com/benwoody/go_learn/blob/master/resources.markdown">https://github.com/benwoody/go_learn/blob/master/resources.markdown</a></li>
<li>My GoLang Pinboard tags: <a href="https://pinboard.in/u:benwoodall/t:GoLang">https://pinboard.in/u:benwoodall/t:GoLang</a></li>
</ul>


<p>The end result of this is to show my progression of starting at the beginning (Hello, world!), all the way up to more advanced Go topics&hellip; whatever those may be.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup for Remote Pairing]]></title>
    <link href="http://benwoody.github.com/blog/2013/05/24/setup-for-remote-pairing/"/>
    <updated>2013-05-24T11:55:00-07:00</updated>
    <id>http://benwoody.github.com/blog/2013/05/24/setup-for-remote-pairing</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been trying to get into the swing of things with pair programming lately. <a href="https://twitter.com/search?q=%23pairwithme">#pairwithme</a> has been blowing up on Twitter, so buddying up with a fellow dev to learn(or teach) a thing or two is pretty easy.</p>

<p>I&rsquo;ve seen a lot of different posts on how to get going with pair programming.  Many of them suggest having another person ssh in to your computer and have at it.  I like to keep remote work separate though AND I just happen to have a VPS for just such a thing.  So let&rsquo;s set up remote pair programming!</p>

<!-- more -->


<p>On your remote machine, create a new passwordless user:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nv">$ </span>sudo adduser --disabled-password pair
</span></code></pre></td></tr></table></div></figure>


<p>This will create a new user with no password on your machine.  We&rsquo;re not going to be needing a password because users will be logging in with their ssh keys.</p>

<p>When I first set this up, I was keeping track of my friends keys and adding them to the pair users .ssh, but that got really old, really quick. Luckily, there&rsquo;s an app for that!  Or a gem really&hellip;</p>

<p>Hopefully you have ruby installed on your remote machine. Now, depending on how you have your environment setup and where you have your ruby gems installed, you&rsquo;ll need to make sure the pair user has permissions to install gems and use them locally. It does? Awesome, let&rsquo;s keep going.</p>

<p>Install Chris Hunts awesome <a href="https://github.com/chrishunt/github-auth">github-auth</a> gem.  This will let us grab a users SSH keys from Github and add them to your authorized_keys.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nv">$ </span>gem install github-auth
</span></code></pre></td></tr></table></div></figure>


<p>To add or remote a user to pair with:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nv">$ </span>gh-auth add benwoody
</span><span class='line'>Adding 2 key<span class="o">(</span>s<span class="o">)</span> to <span class="s1">&#39;/home/pair/.ssh/authorized_keys&#39;</span>
</span><span class='line'>
</span><span class='line'> <span class="nv">$ </span>gh-auth remove benwoody
</span><span class='line'>Removing 1 key<span class="o">(</span>s<span class="o">)</span> to <span class="s1">&#39;/home/pair/.ssh/authorized_keys&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>To get this going, add yourself to the authorized_keys and then add your friend.</p>

<p>Then, both of you can simply</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nv">$ </span>ssh pair@myhost.com
</span></code></pre></td></tr></table></div></figure>


<p>and BAM you got some pairin&#8217; goin&#8217; on!*</p>

<p>When you&rsquo;re done, just remove their access!**</p>

<p>* I&rsquo;ll probably write up a nice post on how I have my pair environment set up at a later date.</p>

<p>** Note that this setup means you have some sort of trust with the person you are pairing with. This probably isn&rsquo;t the BEST security practice.  Optionally, you could add the pair user to a group with limited access.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Bit More Git]]></title>
    <link href="http://benwoody.github.com/blog/2013/02/14/a-bit-more-git/"/>
    <updated>2013-02-14T11:25:00-08:00</updated>
    <id>http://benwoody.github.com/blog/2013/02/14/a-bit-more-git</id>
    <content type="html"><![CDATA[<p>I gave a lightning talk this week for my Intro to Rails class at UW and thought I&rsquo;d share it.</p>

<script async class="speakerdeck-embed" data-id="4ca8cb9057b60130095e12313d092470" data-ratio="1.33333333333333" src="http://benwoody.github.com//speakerdeck.com/assets/embed.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Ruby 2.0.0-rc2 on OSX]]></title>
    <link href="http://benwoody.github.com/blog/2013/02/12/installing-ruby-2-dot-0-0-rc2-on-osx/"/>
    <updated>2013-02-12T16:35:00-08:00</updated>
    <id>http://benwoody.github.com/blog/2013/02/12/installing-ruby-2-dot-0-0-rc2-on-osx</id>
    <content type="html"><![CDATA[<p>This took me WAY too long to figure out, but it seems like a LOT of people have trouble installing ruby-2.0.0 on OSX.</p>

<!-- more -->


<p>I assumed installing 2.0.0-rc2 would be easy using rbenv:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rbenv install 2.0.0-rc2
</span></code></pre></td></tr></table></div></figure>


<p>But it didn&rsquo;t turn out that easy:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Downloading openssl-1.0.1e.tar.gz...
</span><span class='line'>-&gt; https://www.openssl.org/source/openssl-1.0.1e.tar.gz
</span><span class='line'>Installing openssl-1.0.1e...
</span><span class='line'>
</span><span class='line'>BUILD FAILED
</span><span class='line'>
</span><span class='line'>Inspect or clean up the working tree at /var/folders/cy/yn06vn5j6psfz7y2q83xqd7c0000gn/T/ruby-build.20130212134232.22481
</span><span class='line'>Results logged to /var/folders/cy/yn06vn5j6psfz7y2q83xqd7c0000gn/T/ruby-build.20130212134232.22481.log
</span><span class='line'>
</span><span class='line'>Last 10 log lines:
</span><span class='line'>x openssl-1.0.1e/VMS/TODO
</span><span class='line'>x openssl-1.0.1e/VMS/ucx_shr_decc_log.opt
</span><span class='line'>x openssl-1.0.1e/VMS/ucx_shr_decc.opt
</span><span class='line'>x openssl-1.0.1e/VMS/ucx_shr_vaxc.opt
</span><span class='line'>x openssl-1.0.1e/VMS/VMSify-conf.pl
</span><span class='line'>x openssl-1.0.1e/VMS/WISHLIST.TXT
</span><span class='line'>/var/folders/cy/yn06vn5j6psfz7y2q83xqd7c0000gn/T/ruby-build.20130212134232.22481/openssl-1.0.1e /var/folders/cy/yn06vn5j6psfz7y2q83xqd7c0000gn/T/ruby-build.20130212134232.22481 ~
</span><span class='line'>Operating system: i686-apple-darwinDarwin Kernel Version 12.2.0: Sat Aug 25 00:48:52 PDT 2012; root:xnu-2050.18.24~1/RELEASE_X86_64
</span><span class='line'>Configuring <span class="k">for </span>darwin64-x86_64-cc
</span><span class='line'>Usage: Configure <span class="o">[</span>no-&lt;cipher&gt; ...<span class="o">]</span> <span class="o">[</span><span class="nb">enable</span>-&lt;cipher&gt; ...<span class="o">]</span> <span class="o">[</span>experimental-&lt;cipher&gt; ...<span class="o">]</span> <span class="o">[</span>-Dxxx<span class="o">]</span> <span class="o">[</span>-lxxx<span class="o">]</span> <span class="o">[</span>-Lxxx<span class="o">]</span> <span class="o">[</span>-fxxx<span class="o">]</span> <span class="o">[</span>-Kxxx<span class="o">]</span> <span class="o">[</span>no-hw-xxx|no-hw<span class="o">]</span> <span class="o">[[</span>no-<span class="o">]</span>threads<span class="o">]</span> <span class="o">[[</span>no-<span class="o">]</span>shared<span class="o">]</span> <span class="o">[[</span>no-<span class="o">]</span>zlib|zlib-dynamic<span class="o">]</span> <span class="o">[</span>no-asm<span class="o">]</span> <span class="o">[</span>no-dso<span class="o">]</span> <span class="o">[</span>no-krb5<span class="o">]</span> <span class="o">[</span>sctp<span class="o">]</span> <span class="o">[</span>386<span class="o">]</span> <span class="o">[</span>--prefix<span class="o">=</span>DIR<span class="o">]</span> <span class="o">[</span>--openssldir<span class="o">=</span>OPENSSLDIR<span class="o">]</span> <span class="o">[</span>--with-xxx<span class="o">[=</span>vvv<span class="o">]]</span> <span class="o">[</span>--test-sanity<span class="o">]</span> os/compiler<span class="o">[</span>:flags<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Some googleing turned up this issue for rbenv, <a href="https://github.com/sstephenson/ruby-build/issues/288">https://github.com/sstephenson/ruby-build/issues/288</a>, which shows the issue being a problem with version of OpenSSL installed on Mountain Lion.</p>

<p>So I tried the suggested</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>RUBY_CONFIGURE_OPTS=--with-openssl-dir=`brew --prefix openssl` rbenv install 2.0.0-rc2</span></code></pre></td></tr></table></div></figure>


<p>AND</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>CONFIGURE_OPTS=--with-openssl-dir=`brew --prefix openssl` rbenv install 2.0.0-rc2</span></code></pre></td></tr></table></div></figure>


<p>AFTER I had used brew to install/upgrade the newest version of OpenSSL.  NOTHING WORKED.  SAME ERROR.</p>

<p>Problem?  It seemed to be an issue with the most current version of rbenv/ruby-build used with brew.  So I had to uninstall both from brew and use the git-clone method instead, giving me the newest version.</p>

<p>Installing with</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>RUBY_CONFIGURE_OPTS=--with-openssl-dir=`brew --prefix openssl` rbenv install 2.0.0-rc2</span></code></pre></td></tr></table></div></figure>


<p>worked just fine after that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Smileys for Pidgin]]></title>
    <link href="http://benwoody.github.com/blog/2012/12/21/github-smileys-for-pidgin/"/>
    <updated>2012-12-21T14:12:00-08:00</updated>
    <id>http://benwoody.github.com/blog/2012/12/21/github-smileys-for-pidgin</id>
    <content type="html"><![CDATA[<p>Just built out a VERY quick and dirty Smiley plugin for Pidgin.  It adds all of the Github emojis to your chats.</p>

<p>You can find it at: <a href="https://github.com/benwoody/github-pidgin-emoji">https://github.com/benwoody/github-pidgin-emoji</a></p>

<p>A list of emoticons can be found at <a href="http://www.emoji-cheat-sheet.com/">http://www.emoji-cheat-sheet.com/</a></p>

<h4>Fun Stuffs</h4>

<p>Below be the code snippet to generate the Pidgin theme file</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Dir</span><span class="o">.</span><span class="n">entries</span><span class="p">(</span><span class="no">Dir</span><span class="o">.</span><span class="n">pwd</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">d</span><span class="o">|</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;github-emoji/theme&#39;</span><span class="p">,</span> <span class="s1">&#39;a&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">d</span><span class="si">}</span><span class="s2"> :</span><span class="si">#{</span><span class="n">d</span><span class="o">.</span><span class="n">chomp</span><span class="p">(</span><span class="s1">&#39;.png&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">:&quot;</span> <span class="p">}</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pry Easter Eggs]]></title>
    <link href="http://benwoody.github.com/blog/2012/12/13/pry-easter-eggs/"/>
    <updated>2012-12-13T12:09:00-08:00</updated>
    <id>http://benwoody.github.com/blog/2012/12/13/pry-easter-eggs</id>
    <content type="html"><![CDATA[<p>I was playing around in the Pry source code and found a mountain of fun stuffs!</p>

<!-- more -->




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">cohen</span><span class="o">-</span><span class="n">poem</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span>
</span><span class='line'><span class="no">When</span> <span class="n">this</span> <span class="no">American</span> <span class="n">woman</span><span class="p">,</span>
</span><span class='line'><span class="n">whose</span> <span class="n">thighs</span> <span class="n">are</span> <span class="n">bound</span> <span class="k">in</span> <span class="n">casual</span> <span class="n">red</span> <span class="n">cloth</span><span class="p">,</span>
</span><span class='line'><span class="n">comes</span> <span class="n">thundering</span> <span class="n">past</span> <span class="n">my</span> <span class="n">sitting</span> <span class="n">place</span>
</span><span class='line'><span class="n">like</span> <span class="n">a</span> <span class="n">forest</span><span class="o">-</span><span class="n">burning</span> <span class="no">Mongol</span> <span class="n">tribe</span><span class="p">,</span>
</span><span class='line'><span class="n">the</span> <span class="n">city</span> <span class="n">is</span> <span class="n">ravished</span>
</span><span class='line'><span class="ow">and</span> <span class="n">brittle</span> <span class="n">buildings</span> <span class="n">of</span> <span class="n">a</span> <span class="n">hundred</span> <span class="n">years</span>
</span><span class='line'><span class="n">splash</span> <span class="n">into</span> <span class="n">the</span> <span class="n">street</span><span class="p">;</span>
</span><span class='line'><span class="ow">and</span> <span class="n">my</span> <span class="n">eyes</span> <span class="n">are</span> <span class="n">burnt</span>
</span><span class='line'><span class="k">for</span> <span class="n">the</span> <span class="n">embroidered</span> <span class="no">Chinese</span> <span class="n">girls</span><span class="p">,</span>
</span><span class='line'><span class="n">already</span> <span class="n">old</span><span class="p">,</span>
</span><span class='line'><span class="ow">and</span> <span class="n">so</span> <span class="n">small</span> <span class="n">between</span> <span class="n">the</span> <span class="n">thin</span> <span class="n">pines</span>
</span><span class='line'><span class="n">on</span> <span class="n">these</span> <span class="n">enormous</span> <span class="n">landscapes</span><span class="p">,</span>
</span><span class='line'><span class="n">that</span> <span class="k">if</span> <span class="n">you</span> <span class="n">turn</span> <span class="n">your</span> <span class="n">head</span>
</span><span class='line'><span class="n">they</span> <span class="n">are</span> <span class="n">lost</span> <span class="k">for</span> <span class="n">hours</span><span class="o">.</span>
</span><span class='line'>                  <span class="o">--</span> <span class="no">Leonard</span> <span class="no">Cohen</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">east</span><span class="o">-</span><span class="n">coker</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span>
</span><span class='line'><span class="no">Now</span> <span class="n">the</span> <span class="n">light</span> <span class="n">falls</span>
</span><span class='line'><span class="no">Across</span> <span class="n">the</span> <span class="nb">open</span> <span class="n">field</span><span class="p">,</span> <span class="n">leaving</span> <span class="n">the</span> <span class="n">deep</span> <span class="n">lane</span>
</span><span class='line'><span class="no">Shuttered</span> <span class="n">with</span> <span class="n">branches</span><span class="p">,</span> <span class="n">dark</span> <span class="k">in</span> <span class="n">the</span> <span class="n">afternoon</span><span class="p">,</span>
</span><span class='line'><span class="no">Where</span> <span class="n">you</span> <span class="n">lean</span> <span class="n">against</span> <span class="n">a</span> <span class="n">bank</span> <span class="k">while</span> <span class="n">a</span> <span class="n">van</span> <span class="n">passes</span><span class="p">,</span>
</span><span class='line'><span class="no">And</span> <span class="n">the</span> <span class="n">deep</span> <span class="n">lane</span> <span class="n">insists</span> <span class="n">on</span> <span class="n">the</span> <span class="n">direction</span>
</span><span class='line'><span class="no">Into</span> <span class="n">the</span> <span class="n">village</span><span class="p">,</span> <span class="k">in</span> <span class="n">the</span> <span class="n">electric</span> <span class="n">heat</span>
</span><span class='line'><span class="no">Hypnotised</span><span class="o">.</span> <span class="no">In</span> <span class="n">a</span> <span class="n">warm</span> <span class="n">haze</span> <span class="n">the</span> <span class="n">sultry</span> <span class="n">light</span>
</span><span class='line'><span class="no">Is</span> <span class="n">absorbed</span><span class="p">,</span> <span class="ow">not</span> <span class="n">refracted</span><span class="p">,</span> <span class="n">by</span> <span class="n">grey</span> <span class="n">stone</span><span class="o">.</span>
</span><span class='line'><span class="no">The</span> <span class="n">dahlias</span> <span class="nb">sleep</span> <span class="k">in</span> <span class="n">the</span> <span class="n">empty</span> <span class="n">silence</span><span class="o">.</span>
</span><span class='line'><span class="no">Wait</span> <span class="k">for</span> <span class="n">the</span> <span class="n">early</span> <span class="n">owl</span><span class="o">.</span>
</span><span class='line'><span class="o">--</span> <span class="n">T</span><span class="o">.</span><span class="n">S</span> <span class="no">Eliot</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">get</span><span class="o">-</span><span class="n">naked</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span>
</span><span class='line'><span class="no">We</span> <span class="n">dont</span> <span class="n">have</span> <span class="n">to</span> <span class="n">take</span> <span class="n">our</span> <span class="n">clothes</span> <span class="n">off</span> <span class="n">to</span> <span class="n">have</span> <span class="n">a</span> <span class="n">good</span> <span class="n">time</span><span class="o">.</span>
</span><span class='line'><span class="no">We</span> <span class="n">could</span> <span class="n">dance</span> <span class="o">&amp;</span> <span class="n">party</span> <span class="n">all</span> <span class="n">night</span> <span class="no">And</span> <span class="n">drink</span> <span class="n">some</span> <span class="n">cherry</span> <span class="n">wine</span><span class="o">.</span>
</span><span class='line'><span class="o">--</span> <span class="no">Jermaine</span> <span class="no">Stewart</span>
</span></code></pre></td></tr></table></div></figure>


<p>and my favorite:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">nyan</span><span class="o">-</span><span class="n">cat</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSX Rspec Autotest Notifications]]></title>
    <link href="http://benwoody.github.com/blog/2012/12/04/osx-rspec-autotest-notifications/"/>
    <updated>2012-12-04T09:57:00-08:00</updated>
    <id>http://benwoody.github.com/blog/2012/12/04/osx-rspec-autotest-notifications</id>
    <content type="html"><![CDATA[<p>This uses growl notifications to alert you to your autotest status</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Autotest::Growl</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">growl</span> <span class="n">title</span><span class="p">,</span> <span class="n">msg</span><span class="p">,</span> <span class="n">img</span><span class="p">,</span> <span class="n">pri</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">stick</span><span class="o">=</span><span class="s2">&quot;&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;growlnotify -n autotest --image </span><span class="si">#{</span><span class="n">img</span><span class="si">}</span><span class="s2"> -p </span><span class="si">#{</span><span class="n">pri</span><span class="si">}</span><span class="s2"> -m </span><span class="si">#{</span><span class="n">msg</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">title</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">stick</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">Autotest</span><span class="o">.</span><span class="n">add_hook</span> <span class="ss">:ran_command</span> <span class="k">do</span> <span class="o">|</span><span class="n">at</span><span class="o">|</span>
</span><span class='line'>    <span class="n">results</span> <span class="o">=</span> <span class="o">[</span><span class="n">at</span><span class="o">.</span><span class="n">results</span><span class="o">].</span><span class="n">flatten</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">output</span> <span class="o">=</span> <span class="n">results</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="sr">/(\d+)\s+examples?,\s*(\d+)\s+failures?(,\s*(\d+)\s+pending)?/</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">output</span> <span class="o">=~</span> <span class="sr">/[1-9]\sfailures?/</span>
</span><span class='line'>      <span class="n">growl</span> <span class="s2">&quot;Test Results&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">output</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="s1">&#39;~/Dropbox/Photos/autotest/rails_fail.png&#39;</span><span class="p">,</span> <span class="mi">2</span> <span class="c1">#, &quot;-s&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">growl</span> <span class="s2">&quot;Test Results&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">output</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="s1">&#39;~/Dropbox/Photos/autotest/rails_ok.png&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Terminal Colors]]></title>
    <link href="http://benwoody.github.com/blog/2012/12/04/git-terminal-colors/"/>
    <updated>2012-12-04T09:35:00-08:00</updated>
    <id>http://benwoody.github.com/blog/2012/12/04/git-terminal-colors</id>
    <content type="html"><![CDATA[<p>I wanted to migrate some of my previous code snippets from my tumblr blog <a href="http://tumblr.com/benwoodall">http://tumblr.com/benwoodall</a> to here, and I also wanted to test out some of the available plugins.  So here post number 1!</p>

<!-- more -->




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">c_cyan</span><span class="o">=</span><span class="sb">`</span>tput setaf 6<span class="sb">`</span>
</span><span class='line'><span class="nv">c_red</span><span class="o">=</span><span class="sb">`</span>tput setaf 1<span class="sb">`</span>
</span><span class='line'><span class="nv">c_green</span><span class="o">=</span><span class="sb">`</span>tput setaf 2<span class="sb">`</span>
</span><span class='line'><span class="nv">c_sgr0</span><span class="o">=</span><span class="sb">`</span>tput sgr0<span class="sb">`</span>
</span><span class='line'>parse_git_branch <span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="k">if </span>git rev-parse --git-dir &gt;/dev/null 2&gt;&amp;1
</span><span class='line'>    <span class="k">then</span>
</span><span class='line'><span class="k">        </span><span class="nv">git_status</span><span class="o">=</span><span class="s2">&quot;$(git status 2&gt; /dev/null)&quot;</span>
</span><span class='line'>        <span class="nv">branch_pattern</span><span class="o">=</span><span class="s2">&quot;^# On branch ([^${IFS}]*)&quot;</span>
</span><span class='line'>        <span class="nv">remote_pattern</span><span class="o">=</span><span class="s2">&quot;# Your branch is (.*) of&quot;</span>
</span><span class='line'>        <span class="nv">diverge_pattern</span><span class="o">=</span><span class="s2">&quot;# Your branch and (.*) have diverged&quot;</span>
</span><span class='line'>        <span class="nv">merge_pattern</span><span class="o">=</span><span class="s2">&quot;#   unmerged:&quot;</span>
</span><span class='line'>        <span class="c"># add an else if or two here if you want to get more specific</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">[[</span> <span class="k">${</span><span class="nv">git_status</span><span class="k">}</span> <span class="o">=</span>~ <span class="k">${</span><span class="nv">remote_pattern</span><span class="k">}</span> <span class="o">]]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">          if</span> <span class="o">[[</span> <span class="k">${</span><span class="nv">BASH_REMATCH</span><span class="p">[1]</span><span class="k">}</span> <span class="o">==</span> <span class="s2">&quot;ahead&quot;</span> <span class="o">]]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">            </span><span class="nv">remote</span><span class="o">=</span><span class="s2">&quot;↑&quot;</span>
</span><span class='line'>          <span class="k">elif</span> <span class="o">[</span> <span class="k">${</span><span class="nv">BASH_REMATCH</span><span class="p">[1]</span><span class="k">}</span> <span class="o">==</span> <span class="s2">&quot;behind&quot;</span> <span class="o">]]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">            </span><span class="nv">remote</span><span class="o">=</span><span class="s2">&quot;↓&quot;</span>
</span><span class='line'>          <span class="k">fi</span>
</span><span class='line'><span class="k">        fi</span>
</span><span class='line'><span class="k">        if</span> <span class="o">[[</span> <span class="k">${</span><span class="nv">git_status</span><span class="k">}</span> <span class="o">=</span>~ <span class="k">${</span><span class="nv">diverge_pattern</span><span class="k">}</span> <span class="o">]]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">          </span><span class="nv">remote</span><span class="o">=</span><span class="s2">&quot;↕&quot;</span>
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'><span class="k">        if</span> <span class="o">[[</span> <span class="k">${</span><span class="nv">git_status</span><span class="k">}</span> <span class="o">=</span>~ <span class="k">${</span><span class="nv">merge_pattern</span><span class="k">}</span> <span class="o">]]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">          </span><span class="nv">remote</span><span class="o">=</span><span class="s2">&quot;|MERGING&quot;</span>
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'><span class="k">        if</span> <span class="o">[[</span> <span class="k">${</span><span class="nv">git_status</span><span class="k">}</span> <span class="o">=</span>~ <span class="k">${</span><span class="nv">branch_pattern</span><span class="k">}</span> <span class="o">]]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">          </span><span class="nv">branch</span><span class="o">=</span><span class="k">${</span><span class="nv">BASH_REMATCH</span><span class="p">[1]</span><span class="k">}</span>
</span><span class='line'>          <span class="nb">echo</span> <span class="s2">&quot;${branch}${remote}&quot;</span>
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'><span class="k">    else</span>
</span><span class='line'><span class="k">        return </span>0
</span><span class='line'>    <span class="k">fi</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>branch_color <span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="k">if </span>git rev-parse --git-dir &gt;/dev/null 2&gt;&amp;1
</span><span class='line'>    <span class="k">then</span>
</span><span class='line'><span class="k">        </span><span class="nv">git_status</span><span class="o">=</span><span class="s2">&quot;$(git status 2&gt; /dev/null)&quot;</span>
</span><span class='line'>        <span class="nv">color</span><span class="o">=</span><span class="s2">&quot;&quot;</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">[[</span> <span class="k">${</span><span class="nv">git_status</span><span class="k">}</span> <span class="o">=</span>~ <span class="s2">&quot;working directory clean&quot;</span> <span class="o">]]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">            </span><span class="nv">color</span><span class="o">=</span><span class="s2">&quot;${c_green}&quot;</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'><span class="k">            </span><span class="nv">color</span><span class="o">=</span><span class="k">${</span><span class="nv">c_red</span><span class="k">}</span>
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'><span class="k">    else</span>
</span><span class='line'><span class="k">        return </span>0
</span><span class='line'>    <span class="k">fi</span>
</span><span class='line'><span class="k">    </span><span class="nb">echo</span> -ne <span class="nv">$color</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">PS1</span><span class="o">=</span><span class="s1">&#39;\h:\W$(__git_ps1 &quot;[\[$(branch_color)\]$(parse_git_branch)\[${c_sgr0}\]]\[\e[0m\]&quot;)$ &#39;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
